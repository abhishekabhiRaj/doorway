/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/script.js":
/*!********************************!*\
  !*** ./resources/js/script.js ***!
  \********************************/
/***/ (() => {

eval("function fetchVisitorList() {\n  $.get('http://localhost/Doorway/public/api/doorway/visit-list', function (data) {\n    var mainCardDiv = $('#doorway-pr-cards');\n    mainCardDiv.empty();\n    if (data.code === 200) {\n      $('.no-record').remove();\n      if (data.data.length > 0) {\n        data.data.forEach(function (item, i) {\n          console.log(i);\n          var xmlCard = \"<section class='doorway-pr-card' id='\".concat(i, \"'><div class='doorway-pr-card--details'><img src='https://cdn-icons-png.flaticon.com/512/3135/3135715.png' /><div class='ms-2'><p class='m-0 doorway-font-regular'>\").concat(item.visitor_name, \"</p><p class='m-0'>To Meet : \").concat(item.person_to_meet, \"</p><p class='m-0'>Purpose : \").concat(item.purpose, \"</p></div></div><div class='doorway-pr-card--actions mt-2' id='\").concat(i, \"'><section class='hvr-bounce-in'><i class='bi bi-check'></i></section><section class='hvr-bounce-in'><span style='font-size: 17px;'>    x</span></section>               <section class='hvr-bounce-in view-visitor-detail' id='view-visitor-detail\").concat(i, \"'>                    <i class='bi bi-eye' style='font-size: 16px;'></i>             </section>                <section class='hvr-bounce-in'>                    <i class='bi bi-pencil-square' style='font-size: 14px;'></i>                </section>            </div></section>\");\n          var doc = new DOMParser().parseFromString(xmlCard, \"text/html\");\n          mainCardDiv.append(doc.body.getElementsByClassName(\"doorway-pr-card\"));\n          $(\"#view-visitor-detail\".concat(i)).on('click', function () {\n            // var parent_id = $(this).parent().attr('id');\n            var visitor_detail_modal = $('#visitor-detail-modal');\n            visitor_detail_modal.empty();\n            var htmlVisitor = \"<div class=\\\"detail\\\">\\n                        <section class=\\\"d-flex align-items-center \\\">\\n                            <img width=\\\"100px\\\" src=\\\"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\\\" />\\n                            <h4 class=\\\"m-0 ms-2\\\">\".concat(item.visitor_name, \"</h4>\\n                        </section>\\n                        <section class=\\\"row mt-4\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <ul>\\n                                    <li><span class=\\\"key\\\">Person To Meet</span> : <span class=\\\"value\\\">\").concat(item.person_to_meet, \"</span></li>\\n                                    <li><span class=\\\"key\\\">Date of Visit</span> : <span class=\\\"value\\\">\").concat(item.date_time, \"</span></li>\\n                                    <li><span class=\\\"key\\\">Purpose</span> : <span class=\\\"value\\\">\").concat(item.purpose, \"</span></li>\\n\\n                                </ul>\\n                            </div>\\n                        </section>\\n                    </div>\");\n            var doc = new DOMParser().parseFromString(htmlVisitor, \"text/html\");\n            visitor_detail_modal.append(doc.body.getElementsByClassName(\"detail\"));\n            $('#visit-view-modal').modal('show');\n          });\n        });\n      }\n      //\n    } else {\n      var noDataText = $(\"<p></p>\");\n      noDataText.text(\"No Data Available\");\n      noDataText.addClass('no-record');\n      mainCardDiv.append(noDataText);\n    }\n  });\n}\n// data-bs-toggle=\"modal\" data-bs-target=\"#visit-view-modal\"\n\nfetchVisitorList();\n$('#myForm').submit(function (e) {\n  var formLength = 7;\n  var validateInput = 0;\n  var values = {};\n  // prevent form reload\n  e.preventDefault();\n  // get all the inputs into an array.\n  var $inputs = $('#myForm :input');\n  $inputs.each(function () {\n    values[this.name] = $(this).val();\n  });\n  Object.keys(values).map(function (item) {\n    if (values[item] !== '') {\n      console.log(validateInput);\n      validateInput++;\n    }\n  });\n  if (values && validateInput >= 6) {\n    $('#save-btn').text('Proccessing...');\n    $.post(\"http://localhost/Doorway/public/api/doorway/create-gate-pass\", {\n      \"visitor_name\": values.visitor_name,\n      \"visitor_mobile\": values.visitor_mobile,\n      \"visitor_address\": values.visitor_address,\n      \"person_to_meet\": values.person_to_meet,\n      \"purpose\": values.purpose,\n      \"date_time\": values.date_time\n    }, function (data, status) {\n      console.log(data, status);\n      $('#save-btn').text('Save');\n      if (data.code == 200) {\n        $('#create-gate-pass-modal').modal('hide');\n        var text = data.message;\n        fetchVisitorList();\n        $.toast({\n          text: text,\n          showHideTransition: 'slide',\n          // It can be plain, fade or slide\n          bgColor: '#74b212',\n          // Background color for toast\n          textColor: 'white',\n          // text color\n          allowToastClose: false,\n          // Show the close button or not\n          hideAfter: 3000,\n          // `false` to make it sticky or time in miliseconds to hide after\n          stack: 5,\n          // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once\n          textAlign: 'left',\n          // Alignment of text i.e. left, right, center\n          position: 'top-right' // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page\n        });\n      } else {\n        var text = data.message;\n        $.toast({\n          text: text,\n          showHideTransition: 'slide',\n          // It can be plain, fade or slide\n          bgColor: '#ed5c5c',\n          // Background color for toast\n          textColor: 'white',\n          // text color\n          allowToastClose: false,\n          // Show the close button or not\n          hideAfter: 5000,\n          // `false` to make it sticky or time in miliseconds to hide after\n          stack: 5,\n          // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once\n          textAlign: 'left',\n          // Alignment of text i.e. left, right, center\n          position: 'top-right' // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page\n        });\n      }\n    });\n  } else {\n    // alert('Please fill all the fields');\n    console.log('values', values, validateInput);\n    $('#alert').text('Please fill all the fields');\n  }\n});\n$(\"#create-gate-pass-modal\").on('hide.bs.modal', function () {\n  console.log(\"Modal\");\n});\n$(\"#create-gate-pass-modal\").on('show.bs.modal', function () {\n  $('#myForm :input').val('');\n  $('#alert').text('');\n  // clear_fetch();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/script.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/script.js"]();
/******/ 	
/******/ })()
;